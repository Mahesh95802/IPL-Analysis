<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook original-version='18.1' source-build='2021.3.3 (20213.21.1018.0949)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='matches_changed' inline='true' name='federated.1voxvp10s8fv0x1984vpj0vvjup8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='matches_changed' name='textscan.0wdb59f1km3lhy1ck36h91lubqk7'>
            <connection class='textscan' directory='E:/DataSets/Indian Premier League' filename='matches_changed.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0wdb59f1km3lhy1ck36h91lubqk7' name='matches_changed.csv2' table='[matches_changed#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='season' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='string' name='team1' ordinal='4' />
            <column datatype='string' name='team2' ordinal='5' />
            <column datatype='string' name='toss_winner' ordinal='6' />
            <column datatype='string' name='toss_decision' ordinal='7' />
            <column datatype='string' name='result' ordinal='8' />
            <column datatype='integer' name='dl_applied' ordinal='9' />
            <column datatype='string' name='winner' ordinal='10' />
            <column datatype='integer' name='win_by_runs' ordinal='11' />
            <column datatype='integer' name='win_by_wickets' ordinal='12' />
            <column datatype='string' name='player_of_match' ordinal='13' />
            <column datatype='string' name='venue' ordinal='14' />
            <column datatype='string' name='umpire1' ordinal='15' />
            <column datatype='string' name='umpire2' ordinal='16' />
            <column datatype='string' name='umpire3' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation all='true' name='matches_changed.csv+' type='union'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' />
              <column datatype='integer' name='season' />
              <column datatype='string' name='city' />
              <column datatype='date' name='date' />
              <column datatype='string' name='team1' />
              <column datatype='string' name='team2' />
              <column datatype='string' name='toss_winner' />
              <column datatype='string' name='toss_decision' />
              <column datatype='string' name='result' />
              <column datatype='integer' name='dl_applied' />
              <column datatype='string' name='winner' />
              <column datatype='integer' name='win_by_runs' />
              <column datatype='integer' name='win_by_wickets' />
              <column datatype='string' name='player_of_match' />
              <column datatype='string' name='venue' />
              <column datatype='string' name='umpire1' />
              <column datatype='string' name='umpire2' />
              <column datatype='string' name='umpire3' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='textscan.0wdb59f1km3lhy1ck36h91lubqk7' name='matches_changed.csv' table='[matches_changed#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='id' ordinal='0' />
                <column datatype='string' name='season' ordinal='1' />
                <column datatype='string' name='city' ordinal='2' />
                <column datatype='date' name='date' ordinal='3' />
                <column datatype='string' name='team1' ordinal='4' />
                <column datatype='string' name='team2' ordinal='5' />
                <column datatype='string' name='toss_winner' ordinal='6' />
                <column datatype='string' name='toss_decision' ordinal='7' />
                <column datatype='string' name='result' ordinal='8' />
                <column datatype='integer' name='dl_applied' ordinal='9' />
                <column datatype='string' name='winner' ordinal='10' />
                <column datatype='integer' name='win_by_runs' ordinal='11' />
                <column datatype='integer' name='win_by_wickets' ordinal='12' />
                <column datatype='string' name='player_of_match' ordinal='13' />
                <column datatype='string' name='venue' ordinal='14' />
                <column datatype='string' name='umpire1' ordinal='15' />
                <column datatype='string' name='umpire2' ordinal='16' />
                <column datatype='string' name='umpire3' ordinal='17' />
              </columns>
            </relation>
            <relation connection='textscan.0wdb59f1km3lhy1ck36h91lubqk7' name='matches_changed.csv1' table='[matches_changed#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='id' ordinal='0' />
                <column datatype='string' name='season' ordinal='1' />
                <column datatype='string' name='city' ordinal='2' />
                <column datatype='date' name='date' ordinal='3' />
                <column datatype='string' name='team1' ordinal='4' />
                <column datatype='string' name='team2' ordinal='5' />
                <column datatype='string' name='toss_winner' ordinal='6' />
                <column datatype='string' name='toss_decision' ordinal='7' />
                <column datatype='string' name='result' ordinal='8' />
                <column datatype='integer' name='dl_applied' ordinal='9' />
                <column datatype='string' name='winner' ordinal='10' />
                <column datatype='integer' name='win_by_runs' ordinal='11' />
                <column datatype='integer' name='win_by_wickets' ordinal='12' />
                <column datatype='string' name='player_of_match' ordinal='13' />
                <column datatype='string' name='venue' ordinal='14' />
                <column datatype='string' name='umpire1' ordinal='15' />
                <column datatype='string' name='umpire2' ordinal='16' />
                <column datatype='string' name='umpire3' ordinal='17' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0wdb59f1km3lhy1ck36h91lubqk7' name='matches_changed.csv2' table='[matches_changed#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='season' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='string' name='team1' ordinal='4' />
              <column datatype='string' name='team2' ordinal='5' />
              <column datatype='string' name='toss_winner' ordinal='6' />
              <column datatype='string' name='toss_decision' ordinal='7' />
              <column datatype='string' name='result' ordinal='8' />
              <column datatype='integer' name='dl_applied' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='integer' name='win_by_runs' ordinal='11' />
              <column datatype='integer' name='win_by_wickets' ordinal='12' />
              <column datatype='string' name='player_of_match' ordinal='13' />
              <column datatype='string' name='venue' ordinal='14' />
              <column datatype='string' name='umpire1' ordinal='15' />
              <column datatype='string' name='umpire2' ordinal='16' />
              <column datatype='string' name='umpire3' ordinal='17' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Table Name]' value='[matches_changed.csv+].[Table Name]' />
          <map key='[city (matches_changed.csv2)]' value='[matches_changed.csv2].[city]' />
          <map key='[city]' value='[matches_changed.csv+].[city]' />
          <map key='[date (matches_changed.csv2)]' value='[matches_changed.csv2].[date]' />
          <map key='[date]' value='[matches_changed.csv+].[date]' />
          <map key='[dl_applied (matches_changed.csv2)]' value='[matches_changed.csv2].[dl_applied]' />
          <map key='[dl_applied]' value='[matches_changed.csv+].[dl_applied]' />
          <map key='[id (matches_changed.csv2)]' value='[matches_changed.csv2].[id]' />
          <map key='[id]' value='[matches_changed.csv+].[id]' />
          <map key='[player_of_match (matches_changed.csv2)]' value='[matches_changed.csv2].[player_of_match]' />
          <map key='[player_of_match]' value='[matches_changed.csv+].[player_of_match]' />
          <map key='[result (matches_changed.csv2)]' value='[matches_changed.csv2].[result]' />
          <map key='[result]' value='[matches_changed.csv+].[result]' />
          <map key='[season (matches_changed.csv2)]' value='[matches_changed.csv2].[season]' />
          <map key='[season]' value='[matches_changed.csv+].[season]' />
          <map key='[team1 (matches_changed.csv2)]' value='[matches_changed.csv2].[team1]' />
          <map key='[team1]' value='[matches_changed.csv+].[team1]' />
          <map key='[team2 (matches_changed.csv2)]' value='[matches_changed.csv2].[team2]' />
          <map key='[team2]' value='[matches_changed.csv+].[team2]' />
          <map key='[toss_decision (matches_changed.csv2)]' value='[matches_changed.csv2].[toss_decision]' />
          <map key='[toss_decision]' value='[matches_changed.csv+].[toss_decision]' />
          <map key='[toss_winner (matches_changed.csv2)]' value='[matches_changed.csv2].[toss_winner]' />
          <map key='[toss_winner]' value='[matches_changed.csv+].[toss_winner]' />
          <map key='[umpire1 (matches_changed.csv2)]' value='[matches_changed.csv2].[umpire1]' />
          <map key='[umpire1]' value='[matches_changed.csv+].[umpire1]' />
          <map key='[umpire2 (matches_changed.csv2)]' value='[matches_changed.csv2].[umpire2]' />
          <map key='[umpire2]' value='[matches_changed.csv+].[umpire2]' />
          <map key='[umpire3 (matches_changed.csv2)]' value='[matches_changed.csv2].[umpire3]' />
          <map key='[umpire3]' value='[matches_changed.csv+].[umpire3]' />
          <map key='[venue (matches_changed.csv2)]' value='[matches_changed.csv2].[venue]' />
          <map key='[venue]' value='[matches_changed.csv+].[venue]' />
          <map key='[win_by_runs (matches_changed.csv2)]' value='[matches_changed.csv2].[win_by_runs]' />
          <map key='[win_by_runs]' value='[matches_changed.csv+].[win_by_runs]' />
          <map key='[win_by_wickets (matches_changed.csv2)]' value='[matches_changed.csv2].[win_by_wickets]' />
          <map key='[win_by_wickets]' value='[matches_changed.csv+].[win_by_wickets]' />
          <map key='[winner (matches_changed.csv2)]' value='[matches_changed.csv2].[winner]' />
          <map key='[winner]' value='[matches_changed.csv+].[winner]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[matches_changed.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>22</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1 (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2 (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1 (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2 (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3 (matches_changed.csv2)]</local-name>
            <parent-name>[matches_changed.csv2]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Teams(ungrouped)' datatype='string' name='[Calculation_1068760548708544512]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name] = &quot;matches_changed.csv&quot; THEN&#13;&#10;[team1]&#13;&#10;ELSE&#13;&#10;[team2]&#13;&#10;END' />
      </column>
      <column caption='Win Loss Record' datatype='string' name='[Calculation_1068760548718899203]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Teams (group)] = [Winner (group)] THEN&#13;&#10;[Teams (group)]&#13;&#10;ELSE&#13;&#10;&quot;Other&quot;&#13;&#10;END' />
      </column>
      <column caption='Head-To-Head (Ungrouped)' datatype='string' name='[Calculation_1068760548808994828]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1068760548708544512] = [team1 (matches_changed.csv2)] THEN&#13;&#10;[team2 (matches_changed.csv2)]&#13;&#10;ELSEIF [Calculation_1068760548708544512] = [team2 (matches_changed.csv2)] THEN &#13;&#10;[team1 (matches_changed.csv2)]&#13;&#10;END' />
      </column>
      <column caption='HTH Count' datatype='integer' name='[Calculation_1068760548816605197]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Teams (group)] = [Winner (Matches Changed.Csv2) (group)] THEN 1&#13;&#10;ELSE -1&#13;&#10;END' />
      </column>
      <column caption='Winner using Teams' datatype='string' name='[Calculation_1068760548845817870]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Teams (group)] = [Winner (group)] THEN&#13;&#10;[Teams (group)]&#13;&#10;END' />
      </column>
      <column caption='Trophy Count' datatype='integer' name='[Calculation_1068760548882915345]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ZN({ FIXED [id (matches_changed.csv2)]:COUNT([__tableau_internal_object_id__].[matches_changed.csv_0C2B757624464E078694CD82A60B9F0D])}) &gt; 0 THEN&#13;&#10;IF [Calculation_1068760548708544512] = [winner] THEN&#13;&#10;{ FIXED [id (matches_changed.csv2)]:COUNT([__tableau_internal_object_id__].[matches_changed.csv_0C2B757624464E078694CD82A60B9F0D])}&#13;&#10;ELSE 0&#13;&#10;END&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='Head-To-Head' datatype='string' name='[HTH (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_1068760548808994828]' new-bin='true'>
          <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
            <value>&quot;Rising Pune Supergiant&quot;</value>
            <value>&quot;Rising Pune Supergiants&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Teams ' datatype='string' name='[Teams (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_1068760548708544512]' new-bin='true'>
          <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
            <value>&quot;Rising Pune Supergiant&quot;</value>
            <value>&quot;Rising Pune Supergiants&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Winner (Matches Changed.Csv2) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[winner (matches_changed.csv2)]' new-bin='true'>
          <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
            <value>&quot;Rising Pune Supergiant&quot;</value>
            <value>&quot;Rising Pune Supergiants&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Winner (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[winner]' new-bin='true'>
          <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
            <value>&quot;Rising Pune Supergiant&quot;</value>
            <value>&quot;Rising Pune Supergiants&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='matches_changed.csv2' datatype='table' name='[__tableau_internal_object_id__].[matches_changed.csv_0C2B757624464E078694CD82A60B9F0D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='matches_changed.csv1' datatype='table' name='[__tableau_internal_object_id__].[matches_changed.csv_809415C92B3C4548ABB953E07F002EFB]' role='measure' type='quantitative' />
      <column caption='City (Matches Changed.Csv2)' datatype='string' name='[city (matches_changed.csv2)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date (Matches Changed.Csv2)' datatype='date' name='[date (matches_changed.csv2)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dl Applied (Matches Changed.Csv2)' datatype='integer' name='[dl_applied (matches_changed.csv2)]' role='measure' type='quantitative' />
      <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
      <column caption='Id (Matches Changed.Csv2)' datatype='integer' name='[id (matches_changed.csv2)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Player Of Match (Matches Changed.Csv2)' datatype='string' name='[player_of_match (matches_changed.csv2)]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result (Matches Changed.Csv2)' datatype='string' name='[result (matches_changed.csv2)]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Season' datatype='integer' name='[season (matches_changed.csv2)]' role='dimension' type='ordinal' />
      <column caption='Season union' datatype='integer' name='[season]' role='measure' type='quantitative' />
      <column caption='Team1 (Matches Changed.Csv2)' datatype='string' name='[team1 (matches_changed.csv2)]' role='dimension' type='nominal' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2 (Matches Changed.Csv2)' datatype='string' name='[team2 (matches_changed.csv2)]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision (Matches Changed.Csv2)' datatype='string' name='[toss_decision (matches_changed.csv2)]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner (Matches Changed.Csv2)' datatype='string' name='[toss_winner (matches_changed.csv2)]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Umpire1 (Matches Changed.Csv2)' datatype='string' name='[umpire1 (matches_changed.csv2)]' role='dimension' type='nominal' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2 (Matches Changed.Csv2)' datatype='string' name='[umpire2 (matches_changed.csv2)]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Umpire3 (Matches Changed.Csv2)' datatype='string' name='[umpire3 (matches_changed.csv2)]' role='dimension' type='nominal' />
      <column caption='Umpire3' datatype='string' name='[umpire3]' role='dimension' type='nominal' />
      <column caption='Venue (Matches Changed.Csv2)' datatype='string' name='[venue (matches_changed.csv2)]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Win By Runs (Matches Changed.Csv2)' datatype='integer' name='[win_by_runs (matches_changed.csv2)]' role='measure' type='quantitative' />
      <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win By Wickets (Matches Changed.Csv2)' datatype='integer' name='[win_by_wickets (matches_changed.csv2)]' role='measure' type='quantitative' />
      <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Winner (Matches Changed.Csv2)' datatype='string' name='[winner (matches_changed.csv2)]' role='dimension' type='nominal' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1068760548718899203]' derivation='None' name='[none:Calculation_1068760548718899203:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1068760548845817870]' derivation='None' name='[none:Calculation_1068760548845817870:nk]' pivot='key' type='nominal' />
      <column-instance column='[player_of_match (matches_changed.csv2)]' derivation='None' name='[none:player_of_match (matches_changed.csv2):nk]' pivot='key' type='nominal' />
      <column-instance column='[winner (matches_changed.csv2)]' derivation='None' name='[none:winner (matches_changed.csv2):nk]' pivot='key' type='nominal' />
      <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
      <column-instance column='[date (matches_changed.csv2)]' derivation='Year' name='[yr:date (matches_changed.csv2):ok]' pivot='key' type='ordinal' />
      <group caption='Action (Head-To-Head,Teams (group),Winner (Matches Changed.Csv2) (group))' hidden='true' name='[Action (Head-To-Head,Teams (group),Winner (Matches Changed.Csv2) (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1068760548808994828]' />
          <groupfilter function='level-members' level='[Teams (group)]' />
          <groupfilter function='level-members' level='[Winner (Matches Changed.Csv2) (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Head-To-Head,Teams ,Winner (Matches Changed.Csv2) (group))' hidden='true' name='[Action (Head-To-Head,Teams ,Winner (Matches Changed.Csv2) (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[HTH (group)]' />
          <groupfilter function='level-members' level='[Teams (group)]' />
          <groupfilter function='level-members' level='[Winner (Matches Changed.Csv2) (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Win Loss Record,Teams (group))' hidden='true' name='[Action (Win Loss Record,Teams (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1068760548718899203]' />
          <groupfilter function='level-members' level='[Teams (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Win Loss Record,Teams )' hidden='true' name='[Action (Win Loss Record,Teams )]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1068760548718899203]' />
          <groupfilter function='level-members' level='[Teams (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Winner using Teams,Season)' hidden='true' name='[Action (Winner using Teams,Season)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1068760548845817870]' />
          <groupfilter function='level-members' level='[season (matches_changed.csv2)]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Head-To-Head Won,Winner (Matches Changed.Csv2) (group))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Head-To-Head Lost (copy)_1068760548792877067:nk]' />
          <groupfilter function='level-members' level='[Winner (Matches Changed.Csv2) (group)]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Winner using Teams,YEAR(Date (Matches Changed.Csv2)))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_1068760548845817870:nk]' />
          <groupfilter function='level-members' level='[yr:date (matches_changed.csv2):ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Winner,Winner (group))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:winner:nk]' />
          <groupfilter function='level-members' level='[Winner (group)]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Winner (group)]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#0066ff'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#400080'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rajasthan Royals, Rising Pune Supergiant, Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#cc3300'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#d633ff'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#ff4dff'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ff6666'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#ffbb33'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1068760548718899203:nk]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#0066ff'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#400080'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#d633ff'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#ff4dff'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ff6600'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#ffbb33'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:winner (matches_changed.csv2):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Teams (group)]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#0066ff'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#400080'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#d633ff'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#ff4dff'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ff6600'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#ffbb33'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Winner (Matches Changed.Csv2) (group)]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#0066ff'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#400080'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#d633ff'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#ff4dff'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ff6600'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#ffbb33'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1068760548845817870:nk]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#0066ff'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#400080'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#d633ff'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#ff4dff'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ff6600'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#ffbb33'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:player_of_match (matches_changed.csv2):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B Stanlake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HM Amla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LH Ferguson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MJ Lumb&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RE Levi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AP Tare&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JC Buttler&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KM Jadhav&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MA Agarwal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MS Bisla&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S Gill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Sundar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AT Rayudu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuldeep Yadav&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MD Mishra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MV Boucher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S Sohal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DPMD Jayawardene&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;K Rabada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ML Hayden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PA Patel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RR Pant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SE Marsh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TG Southee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DL Chahar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SV Samson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MEK Hussey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AJ Tye&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GC Smith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KK Nair&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Q de Kock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Curran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GJ Bailey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS Dhoni&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;R Dravid&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S Gopal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WP Saha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;J Bairstow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HH Gibbs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RA Tripathi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SA Asnodkar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BW Hilfenhaus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ishan Kishan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KC Sangakkara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RV Uthappa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;G Gambhir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;M Ur Rahman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mohammed Siraj&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S Badrinath&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KL Rahul&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;M Vohra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SM Katich&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BA Stokes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;K Ahmed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MK Pandey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SW Billings&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JJ Roy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;L Ngidi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NV Ojha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rashid Khan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SS Iyer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Joseph&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS Rajpoot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DA Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S Hetmyer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SP Goswami&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CA Lynn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EJG Morgan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;J Archer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KD Karthik&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S Anirudha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BB McCullum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;K Paul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;P Shaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AS Yadav&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DA Warner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;H Gurney&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='id (matches.csv)' />
        <field-sort-custom-order field='season (matches.csv)' />
        <field-sort-custom-order field='city (matches.csv)' />
        <field-sort-custom-order field='date (matches.csv)' />
        <field-sort-custom-order field='team1 (matches.csv)' />
        <field-sort-custom-order field='team2 (matches.csv)' />
        <field-sort-custom-order field='toss_winner (matches.csv)' />
        <field-sort-custom-order field='toss_decision (matches.csv)' />
        <field-sort-custom-order field='result (matches.csv)' />
        <field-sort-custom-order field='dl_applied (matches.csv)' />
        <field-sort-custom-order field='winner (matches.csv)' />
        <field-sort-custom-order field='win_by_runs (matches.csv)' />
        <field-sort-custom-order field='win_by_wickets (matches.csv)' />
        <field-sort-custom-order field='player_of_match (matches.csv)' />
        <field-sort-custom-order field='Calculation_1068760548725444612' />
        <field-sort-custom-order field='venue (matches.csv)' />
        <field-sort-custom-order field='umpire1 (matches.csv)' />
        <field-sort-custom-order field='umpire2 (matches.csv)' />
        <field-sort-custom-order field='umpire3 (matches.csv)' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='matches_changed.csv2' id='matches_changed.csv_0C2B757624464E078694CD82A60B9F0D'>
            <properties context=''>
              <relation connection='textscan.0wdb59f1km3lhy1ck36h91lubqk7' name='matches_changed.csv2' table='[matches_changed#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='season' ordinal='1' />
                  <column datatype='string' name='city' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='string' name='team1' ordinal='4' />
                  <column datatype='string' name='team2' ordinal='5' />
                  <column datatype='string' name='toss_winner' ordinal='6' />
                  <column datatype='string' name='toss_decision' ordinal='7' />
                  <column datatype='string' name='result' ordinal='8' />
                  <column datatype='integer' name='dl_applied' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='integer' name='win_by_runs' ordinal='11' />
                  <column datatype='integer' name='win_by_wickets' ordinal='12' />
                  <column datatype='string' name='player_of_match' ordinal='13' />
                  <column datatype='string' name='venue' ordinal='14' />
                  <column datatype='string' name='umpire1' ordinal='15' />
                  <column datatype='string' name='umpire2' ordinal='16' />
                  <column datatype='string' name='umpire3' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='matches_changed.csv1' id='matches_changed.csv_809415C92B3C4548ABB953E07F002EFB'>
            <properties context=''>
              <relation all='true' name='matches_changed.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' />
                  <column datatype='integer' name='season' />
                  <column datatype='string' name='city' />
                  <column datatype='date' name='date' />
                  <column datatype='string' name='team1' />
                  <column datatype='string' name='team2' />
                  <column datatype='string' name='toss_winner' />
                  <column datatype='string' name='toss_decision' />
                  <column datatype='string' name='result' />
                  <column datatype='integer' name='dl_applied' />
                  <column datatype='string' name='winner' />
                  <column datatype='integer' name='win_by_runs' />
                  <column datatype='integer' name='win_by_wickets' />
                  <column datatype='string' name='player_of_match' />
                  <column datatype='string' name='venue' />
                  <column datatype='string' name='umpire1' />
                  <column datatype='string' name='umpire2' />
                  <column datatype='string' name='umpire3' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.0wdb59f1km3lhy1ck36h91lubqk7' name='matches_changed.csv' table='[matches_changed#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='id' ordinal='0' />
                    <column datatype='string' name='season' ordinal='1' />
                    <column datatype='string' name='city' ordinal='2' />
                    <column datatype='date' name='date' ordinal='3' />
                    <column datatype='string' name='team1' ordinal='4' />
                    <column datatype='string' name='team2' ordinal='5' />
                    <column datatype='string' name='toss_winner' ordinal='6' />
                    <column datatype='string' name='toss_decision' ordinal='7' />
                    <column datatype='string' name='result' ordinal='8' />
                    <column datatype='integer' name='dl_applied' ordinal='9' />
                    <column datatype='string' name='winner' ordinal='10' />
                    <column datatype='integer' name='win_by_runs' ordinal='11' />
                    <column datatype='integer' name='win_by_wickets' ordinal='12' />
                    <column datatype='string' name='player_of_match' ordinal='13' />
                    <column datatype='string' name='venue' ordinal='14' />
                    <column datatype='string' name='umpire1' ordinal='15' />
                    <column datatype='string' name='umpire2' ordinal='16' />
                    <column datatype='string' name='umpire3' ordinal='17' />
                  </columns>
                </relation>
                <relation connection='textscan.0wdb59f1km3lhy1ck36h91lubqk7' name='matches_changed.csv1' table='[matches_changed#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='id' ordinal='0' />
                    <column datatype='string' name='season' ordinal='1' />
                    <column datatype='string' name='city' ordinal='2' />
                    <column datatype='date' name='date' ordinal='3' />
                    <column datatype='string' name='team1' ordinal='4' />
                    <column datatype='string' name='team2' ordinal='5' />
                    <column datatype='string' name='toss_winner' ordinal='6' />
                    <column datatype='string' name='toss_decision' ordinal='7' />
                    <column datatype='string' name='result' ordinal='8' />
                    <column datatype='integer' name='dl_applied' ordinal='9' />
                    <column datatype='string' name='winner' ordinal='10' />
                    <column datatype='integer' name='win_by_runs' ordinal='11' />
                    <column datatype='integer' name='win_by_wickets' ordinal='12' />
                    <column datatype='string' name='player_of_match' ordinal='13' />
                    <column datatype='string' name='venue' ordinal='14' />
                    <column datatype='string' name='umpire1' ordinal='15' />
                    <column datatype='string' name='umpire2' ordinal='16' />
                    <column datatype='string' name='umpire3' ordinal='17' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[id (matches_changed.csv2)]' />
            </expression>
            <first-end-point object-id='matches_changed.csv_809415C92B3C4548ABB953E07F002EFB' />
            <second-end-point object-id='matches_changed.csv_0C2B757624464E078694CD82A60B9F0D' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_31169A02952F47EA82DCBFFBF29CBC68]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Team Analysis' type='sheet' worksheet='Win Loss Record' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Team Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_98902DFDC5FF4DF9BA2842568630F21E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Team Analysis' type='sheet' worksheet='Head-To-Head' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Team Analysis' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_1729EC991D154503BB5944A002D856DA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Team Analysis' type='sheet' worksheet='Team Consistency Record' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Team Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Head-To-Head'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches_changed' name='federated.1voxvp10s8fv0x1984vpj0vvjup8' />
          </datasources>
          <datasource-dependencies datasource='federated.1voxvp10s8fv0x1984vpj0vvjup8'>
            <column caption='Teams(ungrouped)' datatype='string' name='[Calculation_1068760548708544512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name] = &quot;matches_changed.csv&quot; THEN&#13;&#10;[team1]&#13;&#10;ELSE&#13;&#10;[team2]&#13;&#10;END' />
            </column>
            <column caption='Win Loss Record' datatype='string' name='[Calculation_1068760548718899203]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Teams (group)] = [Winner (group)] THEN&#13;&#10;[Teams (group)]&#13;&#10;ELSE&#13;&#10;&quot;Other&quot;&#13;&#10;END' />
            </column>
            <column caption='Head-To-Head (Ungrouped)' datatype='string' name='[Calculation_1068760548808994828]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1068760548708544512] = [team1 (matches_changed.csv2)] THEN&#13;&#10;[team2 (matches_changed.csv2)]&#13;&#10;ELSEIF [Calculation_1068760548708544512] = [team2 (matches_changed.csv2)] THEN &#13;&#10;[team1 (matches_changed.csv2)]&#13;&#10;END' />
            </column>
            <column caption='HTH Count' datatype='integer' name='[Calculation_1068760548816605197]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Teams (group)] = [Winner (Matches Changed.Csv2) (group)] THEN 1&#13;&#10;ELSE -1&#13;&#10;END' />
            </column>
            <column caption='Winner using Teams' datatype='string' name='[Calculation_1068760548845817870]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Teams (group)] = [Winner (group)] THEN&#13;&#10;[Teams (group)]&#13;&#10;END' />
            </column>
            <column caption='Head-To-Head' datatype='string' name='[HTH (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_1068760548808994828]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column caption='Teams ' datatype='string' name='[Teams (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_1068760548708544512]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Winner (Matches Changed.Csv2) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner (matches_changed.csv2)]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Winner (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Season' datatype='integer' name='[season (matches_changed.csv2)]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1068760548816605197]' derivation='Sum' name='[sum:Calculation_1068760548816605197:qk]' pivot='key' type='quantitative' />
            <column caption='Team1 (Matches Changed.Csv2)' datatype='string' name='[team1 (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2 (Matches Changed.Csv2)' datatype='string' name='[team2 (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Winner (Matches Changed.Csv2)' datatype='string' name='[winner (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_31169A02952F47EA82DCBFFBF29CBC68]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1068760548718899203]' />
              <groupfilter function='level-members' level='[Teams (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams )]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_31169A02952F47EA82DCBFFBF29CBC68]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1068760548718899203]' />
              <groupfilter function='level-members' level='[Teams (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Winner using Teams,Season)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_1729EC991D154503BB5944A002D856DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1068760548845817870]' />
              <groupfilter function='level-members' level='[season (matches_changed.csv2)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]'>
            <groupfilter function='level-members' level='[Teams (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Winner (Matches Changed.Csv2) (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Winner (Matches Changed.Csv2) (group)]' />
              <groupfilter function='member' level='[Winner (Matches Changed.Csv2) (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Winner (Matches Changed.Csv2) (group)]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams (group))]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams )]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Winner using Teams,Season)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[sum:Calculation_1068760548816605197:qk]' scope='rows' value='Loss / Win' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Winner (Matches Changed.Csv2) (group)]' />
              <text column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[sum:Calculation_1068760548816605197:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='209' />
                <format attr='maxheight' value='209' />
                <format attr='minwidth' value='220' />
                <format attr='maxwidth' value='220' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[sum:Calculation_1068760548816605197:qk]</rows>
        <cols>([federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)] / [federated.1voxvp10s8fv0x1984vpj0vvjup8].[HTH (group)])</cols>
      </table>
      <simple-id uuid='{C8C248F9-13C5-4520-9786-9E23AF050A0B}' />
    </worksheet>
    <worksheet name='IPL Winners'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches_changed' name='federated.1voxvp10s8fv0x1984vpj0vvjup8' />
          </datasources>
          <datasource-dependencies datasource='federated.1voxvp10s8fv0x1984vpj0vvjup8'>
            <column caption='Teams(ungrouped)' datatype='string' name='[Calculation_1068760548708544512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name] = &quot;matches_changed.csv&quot; THEN&#13;&#10;[team1]&#13;&#10;ELSE&#13;&#10;[team2]&#13;&#10;END' />
            </column>
            <column caption='Win Loss Record' datatype='string' name='[Calculation_1068760548718899203]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Teams (group)] = [Winner (group)] THEN&#13;&#10;[Teams (group)]&#13;&#10;ELSE&#13;&#10;&quot;Other&quot;&#13;&#10;END' />
            </column>
            <column caption='Head-To-Head (Ungrouped)' datatype='string' name='[Calculation_1068760548808994828]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1068760548708544512] = [team1 (matches_changed.csv2)] THEN&#13;&#10;[team2 (matches_changed.csv2)]&#13;&#10;ELSEIF [Calculation_1068760548708544512] = [team2 (matches_changed.csv2)] THEN &#13;&#10;[team1 (matches_changed.csv2)]&#13;&#10;END' />
            </column>
            <column caption='Winner using Teams' datatype='string' name='[Calculation_1068760548845817870]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Teams (group)] = [Winner (group)] THEN&#13;&#10;[Teams (group)]&#13;&#10;END' />
            </column>
            <column caption='Trophy Count' datatype='integer' name='[Calculation_1068760548882915345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ZN({ FIXED [id (matches_changed.csv2)]:COUNT([__tableau_internal_object_id__].[matches_changed.csv_0C2B757624464E078694CD82A60B9F0D])}) &gt; 0 THEN&#13;&#10;IF [Calculation_1068760548708544512] = [winner] THEN&#13;&#10;{ FIXED [id (matches_changed.csv2)]:COUNT([__tableau_internal_object_id__].[matches_changed.csv_0C2B757624464E078694CD82A60B9F0D])}&#13;&#10;ELSE 0&#13;&#10;END&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Head-To-Head' datatype='string' name='[HTH (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_1068760548808994828]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column caption='Teams ' datatype='string' name='[Teams (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_1068760548708544512]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Winner (Matches Changed.Csv2) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner (matches_changed.csv2)]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Winner (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='matches_changed.csv2' datatype='integer' name='[__tableau_internal_object_id__].[matches_changed.csv_0C2B757624464E078694CD82A60B9F0D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches_changed.csv_0C2B757624464E078694CD82A60B9F0D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches_changed.csv2' datatype='table' name='[__tableau_internal_object_id__].[matches_changed.csv_0C2B757624464E078694CD82A60B9F0D]' role='measure' type='quantitative' />
            <column caption='Id (Matches Changed.Csv2)' datatype='integer' name='[id (matches_changed.csv2)]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column caption='Season' datatype='integer' name='[season (matches_changed.csv2)]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1068760548882915345]' derivation='Sum' name='[sum:Calculation_1068760548882915345:qk]' pivot='key' type='quantitative' />
            <column caption='Team1 (Matches Changed.Csv2)' datatype='string' name='[team1 (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2 (Matches Changed.Csv2)' datatype='string' name='[team2 (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Winner (Matches Changed.Csv2)' datatype='string' name='[winner (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Head-To-Head,Teams ,Winner (Matches Changed.Csv2) (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_98902DFDC5FF4DF9BA2842568630F21E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[HTH (group)]' />
              <groupfilter function='level-members' level='[Teams (group)]' />
              <groupfilter function='level-members' level='[Winner (Matches Changed.Csv2) (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams )]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_31169A02952F47EA82DCBFFBF29CBC68]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1068760548718899203]' />
              <groupfilter function='level-members' level='[Teams (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Winner using Teams,Season)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_1729EC991D154503BB5944A002D856DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1068760548845817870]' />
              <groupfilter function='level-members' level='[season (matches_changed.csv2)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]'>
            <groupfilter function='level-members' level='[Teams (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:id:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:id:ok]' member='59' />
              <groupfilter function='member' level='[none:id:ok]' member='117' />
              <groupfilter function='member' level='[none:id:ok]' member='174' />
              <groupfilter function='member' level='[none:id:ok]' member='234' />
              <groupfilter function='member' level='[none:id:ok]' member='307' />
              <groupfilter function='member' level='[none:id:ok]' member='381' />
              <groupfilter function='member' level='[none:id:ok]' member='457' />
              <groupfilter function='member' level='[none:id:ok]' member='517' />
              <groupfilter function='member' level='[none:id:ok]' member='576' />
              <groupfilter function='member' level='[none:id:ok]' member='636' />
              <groupfilter function='member' level='[none:id:ok]' member='7953' />
              <groupfilter function='member' level='[none:id:ok]' member='11415' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:id:ok]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams )]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Head-To-Head,Teams ,Winner (Matches Changed.Csv2) (group))]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Winner using Teams,Season)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <text column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[sum:Calculation_1068760548882915345:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Bahnschrift' fontsize='28'>No. of</run>
                <run>Æ&#10;</run>
                <run fontname='Bahnschrift' fontsize='28'>Trophies</run>
                <run>Æ&#10;</run>
                <run fontname='Bahnschrift' fontsize='72'><![CDATA[<[federated.1voxvp10s8fv0x1984vpj0vvjup8].[sum:Calculation_1068760548882915345:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
                <format attr='mark-transparency' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows include-empty='true' />
        <cols include-empty='true' />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[sum:Calculation_1068760548882915345:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>12</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.868687' y='0.3' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{BC4EF662-A24C-4E19-8171-EC7559711F3C}' />
    </worksheet>
    <worksheet name='No. of Games Played'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches_changed' name='federated.1voxvp10s8fv0x1984vpj0vvjup8' />
          </datasources>
          <datasource-dependencies datasource='federated.1voxvp10s8fv0x1984vpj0vvjup8'>
            <column caption='Teams(ungrouped)' datatype='string' name='[Calculation_1068760548708544512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name] = &quot;matches_changed.csv&quot; THEN&#13;&#10;[team1]&#13;&#10;ELSE&#13;&#10;[team2]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column caption='Teams ' datatype='string' name='[Teams (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_1068760548708544512]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='matches_changed.csv1' datatype='integer' name='[__tableau_internal_object_id__].[matches_changed.csv_809415C92B3C4548ABB953E07F002EFB]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches_changed.csv_809415C92B3C4548ABB953E07F002EFB]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches_changed.csv1' datatype='table' name='[__tableau_internal_object_id__].[matches_changed.csv_809415C92B3C4548ABB953E07F002EFB]' role='measure' type='quantitative' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]' />
              <text column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]</rows>
        <cols>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]</cols>
      </table>
      <simple-id uuid='{CAA5B3F2-C09A-4C50-B9A5-1F8BBBB97DDC}' />
    </worksheet>
    <worksheet name='Team Consistency Record'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches_changed' name='federated.1voxvp10s8fv0x1984vpj0vvjup8' />
          </datasources>
          <datasource-dependencies datasource='federated.1voxvp10s8fv0x1984vpj0vvjup8'>
            <column caption='Teams(ungrouped)' datatype='string' name='[Calculation_1068760548708544512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name] = &quot;matches_changed.csv&quot; THEN&#13;&#10;[team1]&#13;&#10;ELSE&#13;&#10;[team2]&#13;&#10;END' />
            </column>
            <column caption='Win Loss Record' datatype='string' name='[Calculation_1068760548718899203]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Teams (group)] = [Winner (group)] THEN&#13;&#10;[Teams (group)]&#13;&#10;ELSE&#13;&#10;&quot;Other&quot;&#13;&#10;END' />
            </column>
            <column caption='Head-To-Head (Ungrouped)' datatype='string' name='[Calculation_1068760548808994828]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1068760548708544512] = [team1 (matches_changed.csv2)] THEN&#13;&#10;[team2 (matches_changed.csv2)]&#13;&#10;ELSEIF [Calculation_1068760548708544512] = [team2 (matches_changed.csv2)] THEN &#13;&#10;[team1 (matches_changed.csv2)]&#13;&#10;END' />
            </column>
            <column caption='Winner using Teams' datatype='string' name='[Calculation_1068760548845817870]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Teams (group)] = [Winner (group)] THEN&#13;&#10;[Teams (group)]&#13;&#10;END' />
            </column>
            <column caption='Head-To-Head' datatype='string' name='[HTH (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_1068760548808994828]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column caption='Teams ' datatype='string' name='[Teams (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_1068760548708544512]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Winner (Matches Changed.Csv2) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner (matches_changed.csv2)]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Winner (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[season (matches_changed.csv2)]' derivation='Count' name='[cnt:season (matches_changed.csv2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1068760548845817870]' derivation='None' name='[none:Calculation_1068760548845817870:nk]' pivot='key' type='nominal' />
            <column-instance column='[season (matches_changed.csv2)]' derivation='None' name='[none:season (matches_changed.csv2):nk]' pivot='key' type='ordinal' />
            <column caption='Season' datatype='integer' name='[season (matches_changed.csv2)]' role='dimension' type='ordinal' />
            <column caption='Team1 (Matches Changed.Csv2)' datatype='string' name='[team1 (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2 (Matches Changed.Csv2)' datatype='string' name='[team2 (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Winner (Matches Changed.Csv2)' datatype='string' name='[winner (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Head-To-Head,Teams ,Winner (Matches Changed.Csv2) (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_98902DFDC5FF4DF9BA2842568630F21E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[HTH (group)]' />
              <groupfilter function='level-members' level='[Teams (group)]' />
              <groupfilter function='level-members' level='[Winner (Matches Changed.Csv2) (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_31169A02952F47EA82DCBFFBF29CBC68]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1068760548718899203]' />
              <groupfilter function='level-members' level='[Teams (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams )]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_31169A02952F47EA82DCBFFBF29CBC68]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1068760548718899203]' />
              <groupfilter function='level-members' level='[Teams (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548845817870:nk]'>
            <groupfilter from='&quot;Chennai Super Kings&quot;' function='range' level='[none:Calculation_1068760548845817870:nk]' to='&quot;Sunrisers Hyderabad&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548845817870:nk]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams (group))]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams )]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Head-To-Head,Teams ,Winner (Matches Changed.Csv2) (group))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[cnt:season (matches_changed.csv2):qk]' scope='rows' value='No. of Wins' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='37' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='vertical-align' value='auto' />
            <format attr='text-align' value='auto' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7faf0' />
            <format attr='fill-below' id='refline0' value='#faf5f4' />
            <format attr='stroke-color' id='refline0' value='#59a14f' />
            <format attr='fill-above' id='refline1' value='#e8edda' />
            <format attr='fill-below' id='refline1' value='#f0eae8' />
            <format attr='stroke-color' id='refline1' value='#72b966' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548845817870:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[cnt:season (matches_changed.csv2):qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='none' scope='per-pane' value='7' value-column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[cnt:season (matches_changed.csv2):qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[cnt:season (matches_changed.csv2):qk]</rows>
        <cols>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:season (matches_changed.csv2):nk]</cols>
      </table>
      <simple-id uuid='{4E03FB67-F2F4-4293-87AC-84C5379E1AC5}' />
    </worksheet>
    <worksheet name='Top 20 POM'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches_changed' name='federated.1voxvp10s8fv0x1984vpj0vvjup8' />
          </datasources>
          <datasource-dependencies datasource='federated.1voxvp10s8fv0x1984vpj0vvjup8'>
            <column caption='Teams(ungrouped)' datatype='string' name='[Calculation_1068760548708544512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name] = &quot;matches_changed.csv&quot; THEN&#13;&#10;[team1]&#13;&#10;ELSE&#13;&#10;[team2]&#13;&#10;END' />
            </column>
            <column caption='Win Loss Record' datatype='string' name='[Calculation_1068760548718899203]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Teams (group)] = [Winner (group)] THEN&#13;&#10;[Teams (group)]&#13;&#10;ELSE&#13;&#10;&quot;Other&quot;&#13;&#10;END' />
            </column>
            <column caption='Head-To-Head (Ungrouped)' datatype='string' name='[Calculation_1068760548808994828]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1068760548708544512] = [team1 (matches_changed.csv2)] THEN&#13;&#10;[team2 (matches_changed.csv2)]&#13;&#10;ELSEIF [Calculation_1068760548708544512] = [team2 (matches_changed.csv2)] THEN &#13;&#10;[team1 (matches_changed.csv2)]&#13;&#10;END' />
            </column>
            <column caption='Winner using Teams' datatype='string' name='[Calculation_1068760548845817870]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Teams (group)] = [Winner (group)] THEN&#13;&#10;[Teams (group)]&#13;&#10;END' />
            </column>
            <column caption='Head-To-Head' datatype='string' name='[HTH (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_1068760548808994828]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column caption='Teams ' datatype='string' name='[Teams (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_1068760548708544512]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Winner (Matches Changed.Csv2) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner (matches_changed.csv2)]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Winner (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='matches_changed.csv2' datatype='integer' name='[__tableau_internal_object_id__].[matches_changed.csv_0C2B757624464E078694CD82A60B9F0D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches_changed.csv_0C2B757624464E078694CD82A60B9F0D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches_changed.csv2' datatype='table' name='[__tableau_internal_object_id__].[matches_changed.csv_0C2B757624464E078694CD82A60B9F0D]' role='measure' type='quantitative' />
            <column-instance column='[player_of_match (matches_changed.csv2)]' derivation='None' name='[none:player_of_match (matches_changed.csv2):nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match (Matches Changed.Csv2)' datatype='string' name='[player_of_match (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column-instance column='[__tableau_internal_object_id__].[matches_changed.csv_0C2B757624464E078694CD82A60B9F0D]' derivation='Count' name='[rank:cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[player_of_match (matches_changed.csv2)]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column caption='Season' datatype='integer' name='[season (matches_changed.csv2)]' role='dimension' type='ordinal' />
            <column caption='Team1 (Matches Changed.Csv2)' datatype='string' name='[team1 (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2 (Matches Changed.Csv2)' datatype='string' name='[team2 (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Winner (Matches Changed.Csv2)' datatype='string' name='[winner (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Head-To-Head,Teams ,Winner (Matches Changed.Csv2) (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_98902DFDC5FF4DF9BA2842568630F21E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[HTH (group)]' />
              <groupfilter function='level-members' level='[Teams (group)]' />
              <groupfilter function='level-members' level='[Winner (Matches Changed.Csv2) (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_31169A02952F47EA82DCBFFBF29CBC68]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1068760548718899203]' />
              <groupfilter function='level-members' level='[Teams (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams )]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_31169A02952F47EA82DCBFFBF29CBC68]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1068760548718899203]' />
              <groupfilter function='level-members' level='[Teams (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Winner using Teams,Season)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_1729EC991D154503BB5944A002D856DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1068760548845817870]' />
              <groupfilter function='level-members' level='[season (matches_changed.csv2)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]'>
            <groupfilter function='level-members' level='[Teams (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]' direction='DESC' using='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]' />
          <filter class='quantitative' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[rank:cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>20</max>
          </filter>
          <slices>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[rank:cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk:2]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams (group))]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Win Loss Record,Teams )]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Head-To-Head,Teams ,Winner (Matches Changed.Csv2) (group))]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Winner using Teams,Season)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='682' />
            <format attr='height' value='766' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]' />
              <size column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]' />
              <text column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]' />
              <text column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8</value>
                <value>&quot;YK Pathan&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>15</value>
                <value>&quot;MS Dhoni&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>12</value>
                <value>&quot;SK Raina&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>11</value>
                <value>&quot;MEK Hussey&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>11</value>
                <value>&quot;V Sehwag&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8</value>
                <value>&quot;A Mishra&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8</value>
                <value>&quot;DA Warner&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8</value>
                <value>&quot;SR Watson&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7</value>
                <value>&quot;AB de Villiers&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7</value>
                <value>&quot;RG Sharma&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='11' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6</value>
                <value>&quot;G Gambhir&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='15' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>5</value>
                <value>&quot;AM Rahane&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='16' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>5</value>
                <value>&quot;DR Smith&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='20' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>&quot;AT Rayudu&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='22' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>&quot;KA Pollard&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='27' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]</field>
                  <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>&quot;V Kohli&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{7081A15A-DC17-49E1-926A-911A54F36684}' />
    </worksheet>
    <worksheet name='Win Loss Record'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches_changed' name='federated.1voxvp10s8fv0x1984vpj0vvjup8' />
          </datasources>
          <datasource-dependencies datasource='federated.1voxvp10s8fv0x1984vpj0vvjup8'>
            <column caption='Teams(ungrouped)' datatype='string' name='[Calculation_1068760548708544512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name] = &quot;matches_changed.csv&quot; THEN&#13;&#10;[team1]&#13;&#10;ELSE&#13;&#10;[team2]&#13;&#10;END' />
            </column>
            <column caption='Win Loss Record' datatype='string' name='[Calculation_1068760548718899203]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Teams (group)] = [Winner (group)] THEN&#13;&#10;[Teams (group)]&#13;&#10;ELSE&#13;&#10;&quot;Other&quot;&#13;&#10;END' />
            </column>
            <column caption='Head-To-Head (Ungrouped)' datatype='string' name='[Calculation_1068760548808994828]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1068760548708544512] = [team1 (matches_changed.csv2)] THEN&#13;&#10;[team2 (matches_changed.csv2)]&#13;&#10;ELSEIF [Calculation_1068760548708544512] = [team2 (matches_changed.csv2)] THEN &#13;&#10;[team1 (matches_changed.csv2)]&#13;&#10;END' />
            </column>
            <column caption='Winner using Teams' datatype='string' name='[Calculation_1068760548845817870]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Teams (group)] = [Winner (group)] THEN&#13;&#10;[Teams (group)]&#13;&#10;END' />
            </column>
            <column caption='Head-To-Head' datatype='string' name='[HTH (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_1068760548808994828]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column caption='Teams ' datatype='string' name='[Teams (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_1068760548708544512]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Winner (Matches Changed.Csv2) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner (matches_changed.csv2)]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Winner (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner]' new-bin='true'>
                <bin default-name='false' value='&quot;Rising Pune Supergiants&quot;'>
                  <value>&quot;Rising Pune Supergiant&quot;</value>
                  <value>&quot;Rising Pune Supergiants&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='matches_changed.csv1' datatype='integer' name='[__tableau_internal_object_id__].[matches_changed.csv_809415C92B3C4548ABB953E07F002EFB]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches_changed.csv_809415C92B3C4548ABB953E07F002EFB]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches_changed.csv1' datatype='table' name='[__tableau_internal_object_id__].[matches_changed.csv_809415C92B3C4548ABB953E07F002EFB]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1068760548708544512]' derivation='None' name='[none:Calculation_1068760548708544512:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1068760548718899203]' derivation='None' name='[none:Calculation_1068760548718899203:nk]' pivot='key' type='nominal' />
            <column-instance column='[__tableau_internal_object_id__].[matches_changed.csv_809415C92B3C4548ABB953E07F002EFB]' derivation='Count' name='[pcto:cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Calculation_1068760548718899203]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Season' datatype='integer' name='[season (matches_changed.csv2)]' role='dimension' type='ordinal' />
            <column caption='Team1 (Matches Changed.Csv2)' datatype='string' name='[team1 (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2 (Matches Changed.Csv2)' datatype='string' name='[team2 (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Winner (Matches Changed.Csv2)' datatype='string' name='[winner (matches_changed.csv2)]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Head-To-Head,Teams ,Winner (Matches Changed.Csv2) (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_98902DFDC5FF4DF9BA2842568630F21E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[HTH (group)]' />
              <groupfilter function='level-members' level='[Teams (group)]' />
              <groupfilter function='level-members' level='[Winner (Matches Changed.Csv2) (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Winner using Teams,Season)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_1729EC991D154503BB5944A002D856DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1068760548845817870]' />
              <groupfilter function='level-members' level='[season (matches_changed.csv2)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548708544512:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1068760548708544512:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548718899203:nk]' direction='ASC' using='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548708544512:nk]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Head-To-Head,Teams ,Winner (Matches Changed.Csv2) (group))]</column>
            <column>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Action (Winner using Teams,Season)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]' scope='rows' value='No. of Matches ( Loss / Win )' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' data-class='subtotal' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]' value='auto' />
            <format attr='color' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[pcto:cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk:2]' value='#ffffff' />
            <format attr='font-family' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[pcto:cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk:2]' value='Tableau Regular' />
            <format attr='font-weight' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[pcto:cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk:2]' value='normal' />
            <format attr='font-style' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[pcto:cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk:2]' value='normal' />
            <format attr='font-family' data-class='subtotal' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[pcto:cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk:2]' value='Tableau Medium' />
            <format attr='text-align' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[pcto:cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk:2]' value='center' />
            <format attr='text-orientation' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[pcto:cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk:2]' value='0' />
            <format attr='color' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]' value='#ffffff' />
            <format attr='text-orientation' data-class='subtotal' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]' value='-90' />
            <format attr='text-orientation' data-class='total' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]' value='-90' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548718899203:nk]' value='#ffffff' />
            <format attr='color' data-class='subtotal' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548718899203:nk]' value='#ffffff' />
            <format attr='color' data-class='total' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548718899203:nk]' value='#ffffff' />
            <format attr='font-family' data-class='total' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548718899203:nk]' value='Tableau Bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548718899203:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548718899203:nk]' />
              <text column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[pcto:cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk:2]' />
              <text column='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_809415C92B3C4548ABB953E07F002EFB:qk]</rows>
        <cols>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]</cols>
      </table>
      <simple-id uuid='{0999D7C4-BD3B-4C9B-952A-1F6D0E9316E9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Team Analysis'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='54' param='vert' type-v2='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='33' param='horz' type-v2='layout-flow' w='99064' x='468' y='885'>
              <zone h='98230' id='5' type-v2='layout-basic' w='99064' x='468' y='885'>
                <zone h='98230' id='34' param='horz' type-v2='layout-flow' w='99064' x='468' y='885' />
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='46681' id='31' name='IPL Winners' show-title='false' w='28496' x='22703' y='2876'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='46792' id='3' name='Win Loss Record' w='53520' x='45358' y='2323' />
        <zone h='50996' id='8' name='Top 20 POM' w='29470' x='810' y='1438' />
        <zone h='48341' id='22' name='Head-To-Head' w='36922' x='61322' y='50885' />
        <zone h='45022' id='25' name='Team Consistency Record' w='59813' x='685' y='52987' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='58' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98230' id='57' param='vert' type-v2='layout-flow' w='99064' x='468' y='885'>
                <zone fixed-size='280' h='50996' id='8' is-fixed='true' name='Top 20 POM' w='29470' x='810' y='1438'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46792' id='3' is-fixed='true' name='Win Loss Record' w='53520' x='45358' y='2323'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46681' id='31' is-fixed='true' name='IPL Winners' show-title='false' w='28496' x='22703' y='2876'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48341' id='22' is-fixed='true' name='Head-To-Head' w='36922' x='61322' y='50885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45022' id='25' is-fixed='true' name='Team Consistency Record' w='59813' x='685' y='52987'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EADFC2DD-2336-4A80-8A18-356399C4FF5C}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='No. of Games Played'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Winner (Matches Changed.Csv2) (group)]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Winner (group)]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548708544512:nk]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2611126-15EF-4410-B2F6-51CFB934608A}' />
    </window>
    <window class='worksheet' name='Win Loss Record'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548708544512:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548718899203:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548708544512:nk]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548718899203:nk]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548789342217:nk]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:winner (matches.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54DA8489-9001-424E-ABF7-30ADE4FD5F9C}' />
    </window>
    <window class='worksheet' name='Top 20 POM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:player_of_match (matches_changed.csv2):nk]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:winner (matches_changed.csv2):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34B01F2D-21C5-474F-880B-93CF6F24082C}' />
    </window>
    <window class='worksheet' name='Team Consistency Record'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548845817870:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548845817870:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Winner (group)]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548845817870:nk]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:season (matches_changed.csv2):nk]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:winner (matches_changed.csv2):nk]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{185420FC-2489-4427-AF10-03562A34C913}' />
    </window>
    <window class='worksheet' name='Head-To-Head'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Winner (Matches Changed.Csv2) (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[HTH (group)]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Winner (Matches Changed.Csv2) (group)]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548808994828:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8A39B4E-A8B5-4AF4-AA5E-29A8024A68F5}' />
    </window>
    <window class='dashboard' maximized='true' name='Team Analysis'>
      <viewpoints>
        <viewpoint name='Head-To-Head' />
        <viewpoint name='IPL Winners'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Team Consistency Record'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 20 POM'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Win Loss Record'>
          <zoom type='entire-view' />
          <highlight field='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:Calculation_1068760548718899203:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{3A654CD0-156F-4968-8992-676600756A6A}' />
    </window>
    <window class='worksheet' name='IPL Winners'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1voxvp10s8fv0x1984vpj0vvjup8].[__tableau_internal_object_id__].[cnt:matches_changed.csv_0C2B757624464E078694CD82A60B9F0D:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Teams (group)]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[Winner (group)]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:id:ok]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:season:nk]</field>
            <field>[federated.1voxvp10s8fv0x1984vpj0vvjup8].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3681EC67-B187-42BC-962C-64384855F862}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Head-To-Head' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='IPL Winners' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='No. of Games Played' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Team Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Team Consistency Record' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 20 POM' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Win Loss Record' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWYxkWXrXf3eJe2PfIzJyrSWrq3qd7p7G014w45kxDDZgjEe2DEgIHhAS
      iMVvlvwIb35ASDz5AfFgYXsQYIQwBglsz4pnhumlqru6qjKrcovMiIx9uRFxdx6iKiu3zoqo
      itwqzk8KVeWN893zRcT933u27zuS7/s+AsGUIp+3AwLBeSIEIJhqhABeMjxnwPf+7M/YLFfP
      25VLgXreDggmi6wGiWtJdAx+59/9ET/5xdfoWwOadQNVDhGMBkjmF3njxuJ5u3ohEAJ4CYnE
      o0iSwltvvY3jGCSyeSJBC9XX8QIOu6UdEAIAQHrRUSDf95EkaVL+CARnygv3ATzPm4QfAsG5
      IDrBgqlGCEAw1QgBCKYaIQDBVCMEIJhqhAAEU40QgGCqmdhMsO/7eGNMqSmymDwTnD8TE8DK
      rsF/+XBnpLIRXeGf/Nz1SVUtEDw3ogkkmGqEAARTjRCAYKoRAhBMNSN1gl17wHa1TSoSYHu3
      SSYRwrAlluZmTts/geBUGUkASiCIJnfoGQaDXg8jGiQguXieh+d5+L6PO86yaB8cx9n701lZ
      ZfCn3x7JVE7ECf/qr4xel0BwAiMJwDENtreLZLMZNFVBdhx6roQsy/i+j6IoKPIYrSkJVPVp
      1eb6Bu3f/b3RHF5cIP63f230ugSCExhJAKoe4d133zltX56Lb/2nu/z+b393pLJLr2b5zX//
      y6fskeAyceljghu7Xe7+eXGksq59sJnmey6M2nSTJCTl0n9dgkNM9S/q/fi7eN/545HKSvPX
      UH/1H56yR4KzRgyDCqYaIQDBVCMEIJhqhAAEU40QgGCqEQIQTDVCAIKpRghAMNUIAQimmqme
      CX4x7gEPRiybB750ir4InhchgOfmd4F/NWLZvw78t1P0RfC8iCaQYKoZPSKs0iKfCLFZaZEO
      q3RtmaV5ERH2PGz/0bepff/Dkcom3rrJ0q99/ZQ9ml5GjwhTOpSrFXzLp6urBGRnYhFhnju6
      re/7B23HqNfnoK3/Aray7DNqDJDv+7juU9vKt/8fD3/nP45kO/+3vsbcr3xtZD8F4zFGRNg2
      83OzDPoNZNeh78kTiwiTldFtJUk6aDtGvRIHbV1ZZlQJHLaF0TPbHfZZGiMr3mFbwWQZIyLs
      bQDyM/lTdUggOEtEJ1gw1QgBCKYaIQDBVCMEIJhqhAAEU40QgGCqEQIQTDVCAIKpRghAMNWI
      OfbLxu8B3x+x7E8Dv36KvrwECAFcNqrA2ohlb56iHy8JogkkmGqEAARTjRCAYKoZOSKsWGmx
      OJtn7dEa8WiQri1xZb4wMUeCP/U+bqmMHIth3r6DdusmXr+PHI+hpFL4to29vjGx+gQCGCMi
      TFc6NHa3aRkGgZCOJnsTiwiTslkCiwvIkQher4cUCiKnU8hWBHt7B2d7B235Otory3itzqWP
      CPM9f/R6D0XAyZ6MPOKD2/M9PGeM32UKGTkibGdnm9nZOYIBBdlzGbjK5PYIq1bp/vc/RlJk
      1KVFJDWAvfIQORLC7/Xwmi0s20bJZkFVJxoRtlprkouGWak0eHs+z/3dOoos0R6YLKUSNPoD
      8tEwyYsSETbG1yxLMrIqWrknMXJE2DvvDCPCZmZyp+KIbxj4gHXn0+GBdht33/teu4PX7qAu
      LkysTsO0+L9rRbKRMPGgBsBKtc5rM1ke1Zp8WCyTjYRZ1wJ8dfmWGDN+CZnYb+oDvU4TLRjG
      tkyC4SiuY+O5Dr7vowY0HNsioOmAcrJTV5aQIxGcYhEllcJeW5+UmweoGX1MxyEYUNhudagZ
      feYSMdYbLWZiUd6ayyMh8eOtEs2+iciB8fIxMQE41oAHH3yPdGGR+s4Gr37p5zDaDXY3VrHN
      AZIkMTA6zF5/jehrb5x4LjkeQ45ECISWYV/79ziC4QDv/eXrbNytEowG2PysxpXXc7iOR7oQ
      pVPvE4wE2N1oHbFdSif4+++/feBYNho+Uu6VfBopHBrhWxBcNib6VNf0EI3yFrKsYJsDBt02
      +cXrDIwu3WaVeGaG2s4GqUQUuPG55/H7A3xVxa3VkaPRk+sMBQhoCkZrQDiuA7B4M01tp4sa
      kLnyepaBYZPMR+h3rBPP1bftYQfd89FVBU09+UkluPxMTACqppNfWiaemaFd20ULhogkMziW
      RTieJL+0jO/7ZGYXSadTJ57LXlkduV7HcrEGDtn5OAuvpGnuGmyvNtCCKoOezea9GgBzyymU
      Z3QIv7O6CcBMLELfcXj/yvzIfgguJxMTgIREZnYJgMzsIgBa8GhzIqDpKBO8s/Y6Jj/+348A
      2PisCkCr2jtSrrLV5uYXZ088lyRJ2K5Hrdfn3YXJzXEILi6nMrDRbdZoVcs4toVjmziWRTJX
      YObKK6dR3QFmlhIA6OEARmtAbac7su0XFwp4vk+jN8By3GcbvACZn36H3vo2SBL9rTLJd17F
      rDQIzmYZ7FQIJGOYlcap+iA4paUQ0WQGNRBADQTQgmGCkRjNys5pVHWE+RtpXn1/HqM1IJ45
      +gQ6iXQkRDYa5pV8mnwsckoeQvT6IqG5PGalgaJrSIpM5OocajSE0zGQZJnQ3AzJt28ha4FT
      80NwSgJo18q06xX0cJRQJI4aCLB48wunUdURSutNmrsGX/hLV7AGJ48gnRdWs425WydydZ7w
      lTnUaITeRglZCxC9voBrWrTvruLZDkijT5oJxudUmkDxzAzxzPmMmm+vNthevdhNB6veovKt
      HwHQub8GQOPHwwnA1u2nm270t8os/MrPn7l/04SY3LwAhObzyIEAwdksvc0S/a3yebs0NYiF
      IheA9E+8Bfh0Vzfx7YvZbHtZOSKAb37zm+fhx1Rj7tYILcygZ1MMyrXzdmeqOCKAZrPJN7/5
      TXq9o2PpgtOh+r0PqX7nA9qfjj4BKJgMRwSwvLxMJpPh+98fNfWAQHB5OdIJ/trXjm7H47kO
      tVaHRFijWG6QS4YxbJmZbPJMnBQITosjAmhUS6wXSyiSRDiZY3lpDvCxTBuiYQJ41Iw+iufh
      eXGxR9gotiIi7MJyRADxVI5Xw1Ga7T7ZXBoAz7HY3trENFr0LJ9YWMVwxR5hI9crIsIuLEcE
      oCgKdz7+GFMOky0Mo79UPcJP/MR7Z+7cRcZx4Ec/guVlqFTgtdfgk08gn4e1NZibg8EAsllI
      ipbiheWIAHzfIRZP0mkY5+HPpeGjj6DTgYcPh6sVfB8ePYKVFTBNKBZBliESga98BRQRWnAh
      OfJ8HLSb1Lp9crmsmCU7gVwOej1ot6FeH/67sDC846vq8Mnw6qtQq0F39AWpgjPmmCeAj20P
      WH+0wfWb14QIPoelpeFrP+++e7TcrVtn44/g+TjaB1ADSL5DvdU+D38uJaY5bAb1+xAKDZtG
      qRQjjxKNQ8Nu8Gn9U5bDywTkAOlAmjudOxT0Aqu9VQp6AQmJRCBBEtH5eBZHBOAhcf3Wm7z/
      M2lx9x+R3d1hE6hcHvYFXBcWF4cd40mz0d9ARkaTNWp2jZgaw/M9VnurJNQE97r3GHgDkoEk
      P8vPjjxkOq0c+XYsc8BuucT9Byu0u2I5xCiEQtBsDju6vg+aNvz3NMhpOcpWmfX+Ove69+g4
      HYqDIpZn8VH7I95LvsdyeJmdwQ6Wd3ISAMExT4BEZoZbsSTNRgNzMIBj0oQIDuJ5w/5AODwc
      9Wk0YOaUwiHmgnP8cuGXAXg3Mex0/OLMLx4ok9WyvBl/U6z1HYFj4wFWPv6YT1d2+Bu//ktn
      7c+lJJ8/+PfsybH3E8P3fUpmiaAcxPRMEoEEIUXkLxqHYwWQyM6QqrbFDeQSYLgGn3U/Y9fc
      5RdmfoEQJwjgm78BgxEHN77yT2Hxnck4eYE5VgC+ayBH4kIAFxxJkrA9m3cS7/CDxg9YNVb3
      mkXH8oP/AJ3d0U7+9t+cXgE0am3c3gCXZ2XxFJw318LX0GWdN2NvMqOL7KXjcqwAbr75Buo9
      sRnFZSCoBAGYD4ksds/DEQH0WzVu31ul37K4fh4eCQRnyBEBmI7Pm194B12VqJQrFE5pPwCB
      4CJwRACxeJQH9+/Rs31uvDJMZei5NtVmh1QkyHa1RSaq0XVkCtmTk9wKBBedo2uBAkEKhTk2
      t3aIRp4MqUk4lkPVahCRfMrGgCA+npcQEWGj2F6QiDCF0cN4XM/Df8beDC8Dx3aCm5UyraaB
      y3Ay0XNMilubFGZy1Do94jEdw5ZERNiotpcwIkyR5eG67pecYz+hbbap7Qx4cp/aHxG2eFae
      CQRnwLG3h2Akhhe0xByA4KXnmGHQOh9+ssr83NJx5U+Fh7kZ/uvPfHmksulshn98yv4Ipocj
      Aggl0rz79ruoyGc2E2wrKp3QaKtO9WBwYvUOfAnDHa2NHPBlJjXm5egag9hon9cO6ROqVXAc
      x/dy3D5ru12yV1/u2cUfmjr/ozNa1NR1I8I/mlC9xS/d4kPv6yOV9d98lZ+eUL2Coxy5/fm+
      zScfPwBZGmOcQyC4nBwRgCQFuHYtx8ZnW5zuLlkCwflzRACONUCOJEjOhMVyaMFLz5FrvN+s
      s/poHSUgOl+Cl5+jnWDfwzRN3IDYnVDw8nNEAHo8zftfeh9VDYgmkOCl5+hy6FaD737nx1y5
      doVEJnXhRZD9gsrb/2K0QPDFxcnNIQheDo4uhy7M895bbTYqnUsxDCprEnpixMmsyGX4RIKz
      5NgrR1EVFJHOWDAFHDsTvLB8k0yuyyklNxOcFze/DMXbEMmAM4DdVXj9r0C7DMEo+B7027D5
      wXl7emYc+wSol7b4+N7qkTdbjQr37q1SLhV5tLl9Bu4JJorVg9QiDDrD3I39Juw+GOYKahSh
      tQPRLFz/qfP29Mw49glQKVfot3t7ATFPMAcmptnH9MMEVQ/P8yYTEeaNPuf8QhFhh2x9f5yI
      MCYWEeadV0RYr4nULg2fAI0tCMagtgaeC5krsPsQausQzUxvRFi/VaM5MKk3GkeaQLquD1+S
      z8BRJhcRJo/e33ihiLDDkVnSONFkTCwiTD6viLDdB8PEWJVj9iMu3h7+axnQa0xvRJhrDtja
      KjJ35ZUjS6ET6RyJ9PFZIhyjSefBj0arNRyCnxNJV84VJQCv/jzUHg2bRff/FFz7vL06c47G
      A6RyfPWrX4UxM8t7Vh+rWhyprBWNjHFmwamgBIY7eMTyEIqDrAgBACgBjVRKOw9fBGeJ7w87
      xf0WqNpwBGgKefkbeYLjsftw709GLv71f/ZvMa3ROsX/+je+wbu3Lkf6BCEAwUhUm10GIwrA
      di5PJIkQwCXjYXST3Wx9pLL5WJrrIpHNiQgBXDJ+nP6UHy7dHqnsl1JfEAJ4Bhd9sadAcKoI
      AQimGiEAwVQjBCCYaoQABFONGAV6TrpGFKOXf3ZBQNeSJBOn7NApk0vFaHZ6hIMa9XYP23GZ
      yyUwLYdoWKfbM2l1+/j+5YoiEQJ4Tr775z/D//nWaKtYX715nX/wd07ZoVMmHgkyn0uQjIZY
      LzXomRaL+SQf3N9ieSHLK4t5LNvh9urlihMRTSDBSARUBU1V8YGgrqIqMpGQTjYZpVzv8OH9
      LfB9bi2N9lS8KIz1BHDMHhulOtl4kK4tMZfPnJZfggvGVrlBp2cSCCgMTBvf99mtd+gNLFzP
      R5YlvvvxQ1T1csWSjyWA7Z1tXEeh1ZdR/EMRYWPs8wWXPyLsRfb5epGIsLF89r0Dti+yR1i3
      b2LaDqb99FinZ+79/8lnci0H1ztY70VmLAEk4gm2d8rYqsTAkw9GhI2xzxdc/oiwF9nn60Ui
      wsbyWZIPRbGNzkkRYbqm8qXXryBJEpIk8e0PVvD2dX4V+fnrPWvGE8AJEWGC6cH3fSqNLpVm
      ly+/ewNZlvDcyzX68wTRCRaMTUBViEWCBDWVjx4UccZs/l4kLsdzSnChMPoWP/x0/bzdmAji
      CSCYaoQABFONEIBgqrkQfQBdD/DGqzfYKVeYn53h03urZNJJUok4/YFJLBpBkqC0Wz1vVwUv
      GRdCADAcWtMCAWzbQZYlbMvG9Vwsy6JrQEBVmSvk6fUHE6szFovw6ivX2K3WmZ+d4fan98mk
      kiQSMQKqSr3RJJVMUGs0J1YnQCaVZPnaEp7noWkB7j14xNLCLOFQCEWR8TwP23Gp1RsTrfcH
      4fex3dHiiV9T0qQnWvvF5EIIwHFcOl2DXr+PqqqoioKiKjSabYK6TrXexHEcYpEw6gS3bvI9
      H1VVkWUZx3GRJJibzSNJEqVyhWa7QyIRZ2lhFtue3Mym43qEgjqmZe2llDQtG0mS0DUNx3VR
      FJmrSwsTXVrwP2N/la7cG6lsKlAQAjgrXNdjs1gCoN0xAOgPzCPlTNMim5nUfu1gWhatdgfb
      tmm22+i6zu1P7xMKBinMZLFsm83iDol4jNgEs9kNBgMazTadbpdgMEgoqKMqMo1mi3gsxnap
      TCAQIBmPMVu4XIvLLhsXQgCHmZ3J7W3Q0TV6NFvtE8vncxkGgwHJRJyNrR3yuQy+56EoCs12
      h1QiTqvdOWJn286e8Frt7t7x/mDAo/Wtvb93KzWi4dG2YRoF07Io7pSBp4Iv7uwe+Ns0LcqV
      GoUZMfN+mlxIAfi+TyadfLzQzT9RALqukcum6XQMYtEwsixjWRbpZIKO0SMUDJJKJojHopiW
      dWK9C3MFXNfda5pUapNtg38eVxbn6PUHqIqC0evT7nSfbXTGfHFew7JGW8MU058OLnqexze+
      8Y2R6/nt3/5tbty4MbZ/z8uFFIBpWexWa/ie/8wIo8DjPoOmBfA8j1AoSDgUAgky6STVap1S
      uUIul0Z7Rv/B932ymRSKItM1+mcmAN/3mZ3JoWsBdsqVCymAmaiMbY/WH9H2FfN9nz/8wz8c
      uZ7f+q3fGte1F+JCCqDRPLnJs5+u0eOjO58dOGYYRzt69WaL+dmZE89lWsNmR6fTJRQ6ux0l
      LdumuFPGsl7O7MzvvvsuAKlUig8++ABN03jvvfcoFouEw2GCwSClUomVlZUz922iAriyOEer
      3SEcDrG9s0s+lyGZiGEYfdrdLoVclkqtPnbswDiEgjqKogyX5/r+WMOm1X13/OM64adFqfxy
      z2/UajV0Xee1114jm80SDoe5ffs2V69e5cqVKzx69Ihbt26haWeflXw8Afg+2zs7RIIBurbE
      /Ex2761wKMRsIY9h9HEeJ0et1ZtIgNHvI8syiqowO5Pb6+idBrOFPKqqEAoGebS+eWr1CEZn
      eXmZ7e1t1tfX8TyPSqXC66+/zoMHDzAMg7W1NUql0sUXQLddp9nu4EsxpEMRYUavz2f3V1Fk
      hXQqQb8/wPN9qvUGC7OF4cjHdplYLILneqcWESbLMqqiYlk2+WzmgNheloiwcDg0HOVSFbrd
      HqlknE7HIJGIYRg9JFnGtp0jEWHjcPg3Gof9EWGe5/EnfzJMw37v3r29Mtvbw+D59fXhqtJ6
      fThB57rumUaTjSUAy7QwOi3CQQ3bP7hHmCRBszUcajw8c7q+9TRTQKdrEItGTi0i7NHaJpIk
      4cORDvTLEBEWDoe4uXyVdqdLQFVZebTO4nwBz/NRFBnXHd6UWu0u0gtEZsnKi0WTPbF13YM3
      N13XWV5eplqtcuPGDb73ve8dtFWUM40mG6umdH6WdH52pLKZdJJEfNj+d1yHWn2yywk+j7F2
      q7yEpBJxTNNCC6iPQ1EVGs0OkXAIWZbZrdbRAiqzhRyBCxiWaFkWsizTbDYvRNzwqX1DtXoT
      XdOIxyM4jntmAnjZ2S5V+NGHd5AkCVmScD2P0m4F23bQAgEse7ikorRb5Ytvv3He7h4hEonw
      xhtvkM/ncV13+LQ+x2RapyaAcChIq90hFNQvXbawUQgFg1y/skCz3UELBCjtVinkswxMk0Q8
      Rq8/QGI4TDtpfH84P/LkWfdknZJl23vvO47LkX1uLwDdbpc/+IM/OG839jg1ATwZflxdezlH
      YizLIhQO4fk+qUSc0m4VSZaIhMN0ugaJeAxd10gm4+PtoTwmSwuzhIJBHMeh0zXYrY622lMw
      5OI1Ei8J4VAQ13Hp9QcoskwwqBMKBrEsm4W5Ao/Wt9ACKjP57Kl26rpGj2qtQTIRp3oBm5mS
      JPHPf/Nfjlw+X5g7RW+OIgTwnHSMHp89eAgMF8sBPHz8tNvaLu2VqzVavHrz9DYF7/UG2I6N
      rmuEQ8FTaXK9KLo++qy6PMbI3CQQApgQQV0noKkM+iaSJO21x0+bgTmcsd6/elUwOkIAE2L5
      +hI7O7tk51P0+gPKInzzhfEsaIzRX07+EihP0tA7BhT/8zNthAAmhGVazBZySJKEIsuUz9uh
      Y5AkiXAoiKIoOI6DZdlkMylqjSbRSATP8+j1L06Of9+E3X8zevnoz+4XQBcePNtYCGBCrK5t
      ABKe542cgPasyWXTyLJELBrh/soakiyRTiWJxSJYlkM8FsF1PbZLu+ft6pkhBDAhhut7hnfO
      i3H/PEo8FkGSJEzTppDPslutI8sSiqwQDimsbRSZnclR2LfI8QmhYJCg7uP5PobRQ1EUsukk
      7Y5BKKTjuh5do3dhnh4AP/jMwPV8Ki2Ht66F0AMS37rd5c0rIe4XB3T7nhDANLHycAOj10eW
      JDzfRwLur6zhOA7y43VEDx6uI8syP/kX3j5ge+P6Eo/Wt4aTfL0+siyRzaSxHYfZmWHTz3W9
      AyNgkyD6F8HaAv06DO6BFADtKnhtkIKgRMHahsHdg3am4/PZ5oB0TCEVVfB9CGky0aCMFpCI
      hhTms5oQwLTh+z6u//RJ5T1ej7M/RuO4PRdM0yKfy6AoCslEDM/zkGWJUDCIqqqsPNpgfjbP
      TG6Cm6ZI4BqgLYG1CXIQUMDeAiUJbhvcOqgFCB1a9aGrEn/3q2kaXZcHxQGJiIIx8JjPasgS
      XCtoFFIBIYBpJRBQuXXjGo1mi1QywWf3H+K4n78sfeXRBrbtoMjDvEWe73P3/iqe51HareK6
      LvdX1pBlma9O0E+3CdYjULNg7wASBApgPgA5PHzf3uHYxryiSGQTKtlEdO/YQu5gzIEQwJTy
      pMmSSiaoN1ooinyiAJ7Efux/OjwJfAL3QLmJ4Q8vfhhe6E8wVx8faz0+0H/2qVqGy0pxQCqm
      sla2+Mrb0eGCwnH88RyLnVIFs9el2T69qC7B6WPbw7VD91fWcD0Pc8x45PfeeYPZmRxXFs9u
      6YIUguDrwz5A8PXxbBMRhaAmk4op9M2nIh3rCWDaDpbRZdvpI3s+8WhoT/HjKn9/oMRYtr7/
      3Lb+IdtxI8IO2o4x2nHE5/Eiwp633sO2h9970mE9btLO87zPtU0l4wR1nUx6mEGjuFPe9zQ4
      aOv7PovzBSKRMK7j7o0UpVMJypUauqaRSSfpdA02tnZw99kOuyVPg6X8Pnh9wAc5yjBKad/X
      4Xkuey57HvvDrGpth7WyheP6pKJP3xlLAJ1GhY7lEJE9Bu5wfyhZHu4VNk50FRyM5BonQorH
      dT6PrSQdrPdFfJak5/d5HFvpiO041Upj7aG2H1mSP9e20Wzzww9u47ke+VzmwMUP7F0TMBSA
      YfSp1ZukU0k836PZ6jA3O/N4NGmYfymTSnBlce6A7eH2iRwFbX446uObHBlvHtru/XHgvUxc
      5a+9f3S38rEEkJ1ZIJnzUJXhsNKTH3K4Wdo4Zzp8EYxn/Py20ngX7qFanteWQ7bn912NY3iy
      7ZMULp83afbE1vd9jH4fy7KRZYl2x0BVVYrbJXRdJxwKsVPepdlso2mBE79nrwvd75zs9Lgf
      dywByIqCplyufWAF549pDjPybWzt7B17krtpf9a/Jwv7JoFh6/z+nS8/s5wYBRKcKbqmcWVx
      js3tElcW5vaWlE8ax1e433x2/LoQgOBMMS0LSZK4fnWRaDg03GL1cwYFHNXmf33pv4587r8X
      +jo6sbH8EQIQnCmhUBDHdVjf2iYcDJ44IuZJHtv5tZHPbSvjx2AIAQjOlH5/wOqjYeTc4JTT
      T+YyKQamha5rNFttPNcjm03jPU6db9u22CRPcLHJpJPEY1GymdTesG4mnUTXNeKxKOlkAlVV
      jh05mi3k0bQAc4U8EhKLC7OEgjqNRgtdC3BtaUE8AQQXFwmYK+TZ2i4T1DXyuQzyYxEkEzFc
      1yOZiNPr9yluHw5Bkmi1O+SzaVzPY2Ymi+04ZNNJev0ktXqTVrsrBCC42DRbHWbyGRRZplpv
      IkkS8XgUy7TQAgFW1zaYncmRyx7e0cxns7iD5/kHOtqlcuVAv0MIQHBh8Rlm2PB9fy+GAWCn
      XMH3/b2scp2Ocez04JMLff8Ff7jTLfoAggvNk7VP3r41UE+O7V8X9awVUrqucW1pgWw6yTtv
      vbZ3XDwBBJcGLRBgYb6wtwxjnOgz07Qw+n3aHeOAnXgCCC4Nlm3TNXqYpkk6dXRh20mEQkGi
      4RCqqhxI1PxcAmhWy2ztVJ7HVCB4boK6RjQSxnYcdsrjXX/9/oCH61v0+oMDTafnagL1HA/F
      P//c7oLpYmBae+knJ8VzCUB2bbr2Rc1+IxCMznMJoDC/BHAgRjSo6ywtjLZ7TDgUPBBtFAqN
      bpuIxw7YRsKhkW2zmdQB21g0PLJtPpc5YJuIRUe2zR2qNxmPjWybSScO2KaS8ZFtU8n4Adv5
      2Rn6g9F2zQzq2gHbxbnCiTHD+9ECgQMRYaP6C6CqytN6x7RVZHnPVoKRbCX/BTIZ+b7/OD3G
      8/Wlhe3Z2L4Il+3zPrmcRw0EeqFv9MnaDEmScMweA8ul3W4/jhB7+vJdG9eXjhyXZZlOq87O
      bu3Ie5Ik7S2dbdUrNDsGnucfsJUkCcl3sV0X0xxuDWSZFvbjbYI+77Xns+PgWhauz/Fl8TAt
      F8s0sW33gC2+x1Zx55l1Ha7XMY3HgSHDY5ZlYjtPzzHotimWKnDYVoL19TVMxzuhDn/Pz8Ov
      anmHnjm6r4e/K9casL5Z3Pvdn/UCnv5GjyMGd7c3aXX7Y9tWyzs02sbYvpu9Dkd5++MAAAWA
      SURBVKVK/cQyLzwP8MThfrNFzZcob23z+s2bSHg06xX6tkcsrLLb8VkqpGgbJrqmUsgPs4n1
      bQf6PUplG9sZNg9c26TWbCMHNK4WUrQGPnEMPrtbZG4uS7tvc2W+MHTANvjgk3VuLS+xsbVF
      SNXRdAhGYjQqu1ieRzAUxx10KVy5RijwdOFUs1am0jLJJaI47gBXDuEN2uihMJ2+w/LVRbbW
      PiUzt4jT65ObSe3ZlopFcvkCG+srhGJZfMsgFAxTabZJp2J0ew4xXQI1hC/55DOZ4QXeMkim
      wmwUi7i2TSAgM+h1CcfTKIqG5LkkNNje3sG0XeK6TCCWIqH5BKNxSltbeJ5DMh7FVwMYPQvZ
      6WG6Dr6k02+2KSzN0262iMfCtPsWy0sFSuUaBUXHNzUGlkGjPSAZ1TBMl5Cu4csqttEmGItj
      myZGz+T69asoj2Oue90emXSMtfUNPA9S8RCm49E1+iQiGpIWpl0pk5m7QjIWOvYOLClB6tVt
      FK+AY7YoNwzy+SxGz2Lxye/J0bu3J8sY9SqW2WVgGIS1MJ4m0+tZRAJgyTqLhfwhW5/ybhVf
      1Wi1O0g+2HaPTrtLIpWkZzpYve7k5gEkScE22oTjKaqlbR6tF9HDMRKxBJZp4Tom25sb3Ln3
      AMuy9uwGRptKp0en2aLd7VLb2cQw2nx691MMywNZpdeu0xk4FHJZdoob3Lm3cqDudCpJdbfM
      wOgxcBxarTqdVp0H9z6h56rg9Fi5/wml5sEEMnJAJ6YrGD0LRQ2iqy7d7oB2u87Dh+t4noOi
      aAyOaTcHAgpbxR1iiQyKZHPnow8pl+rM5OJ0LIloKMDW2kPW1jew9+0V4HkWW8US/WaVu/ce
      YLsQT2VQJRfLdnDNHtuVOka7wSd37jHwFeLh4QYT6w9XQIV7d+5Sa3aplrf55P4KtUoJxw+g
      yBL5uXm61RK3735Ks+8SDQYBmWg0SHm7yL2792l1LVKJEKYrEQ4q9I02xeI6H318h9JunUwm
      zfb6IwbOvqwZns3m1ja9dp27dx9Qb7ewul1sHzbXHvHo0Qax5Ax2r83nUa+WSKWzPHxwn0p5
      l3x+mJBr9Rl7GzSqZXq2h2VZ7Ba3aDSG9UbCGt1Oh06nc6yd65h0uj1K25tsFEvYgx4r9+6w
      uVMhEYuw8tntF+sD7Gfc0zxR6mG7cnmXmZn8gXLHnXtP6b4/VjLa/XeX48678WiFRG6ORDQ8
      tu0o9T7P1z1sch38nNVymfTMzEh3sEPZQ8avm/H8Pu7uDz4nneJ4G55Zd3l7EykYYyaTOtHO
      sfq0DJtMKn6w3kkJQCC4jEx0LVC5sovquyihBL3aDo6qEY3GGQwsorqM6SvYvQ652QUCylDx
      W8UNcBVCQQU9mqBZq5LL5yiXa6QSIRwpgO/YuLZJMJYmFtYPVmq2WCm1SURjDPoGsXAUVfUw
      TJ9OfYd4IsFu0+WNV68cu2Lw0ep9ugOHG8vLyPjUq7tEY1FcKYDRG+D0GsQyc6T35ZcEsDsV
      Plgtc3P5OkFNwep1MP0AstMnFI3TMy2yqeTnfle13RKheJpScYVIdBZfckkl4njOgHazhqun
      kH2PQu7wMl9Ye3CXjiVzdSGH7SlEohFcs0etZeDjEtVUApHU0+/KbFM2A5jNCjOzc+BYrDxc
      ZWF+CcsDXXKwXBeUILXSOgvXXiUSDOzVV9x4iKuEMY0aM3NXqddqzM7O0O8N6HYaZHIFGs02
      6XgIo2di+/Jjv32K29s0d6skCzOEVAlJi+KbffSwRrNtko5pdC0IKR4DywE1SDYVAzzufnwb
      ORzn6uIcnmNRabTJpeN0+y7RgMUnD6u8cuMqIVUhENSP/X3dgUHT8lF8B8m1QQvTazWIJpK0
      2l3+PykdmQzsm4W5AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
